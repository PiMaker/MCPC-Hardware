//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\stefa\Desktop\Repos\MCPC\M\M\Grammar\M.g4 by ANTLR 4.6.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace M {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] MParser.PrimaryExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.argumentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentExpressionList([NotNull] MParser.ArgumentExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] MParser.UnaryExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] MParser.UnaryOperatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] MParser.CastExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] MParser.MultiplicativeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] MParser.AdditiveExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShiftExpression([NotNull] MParser.ShiftExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] MParser.RelationalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] MParser.EqualityExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] MParser.AndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExclusiveOrExpression([NotNull] MParser.ExclusiveOrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclusiveOrExpression([NotNull] MParser.InclusiveOrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] MParser.LogicalAndExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] MParser.LogicalOrExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] MParser.ConditionalExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueExpression([NotNull] MParser.ValueExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] MParser.AssignmentExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperator([NotNull] MParser.AssignmentOperatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] MParser.ConstantExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] MParser.DeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.inlineDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInlineDeclaration([NotNull] MParser.InlineDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.declarationSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationSpecifiers([NotNull] MParser.DeclarationSpecifiersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.initDeclaratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitDeclaratorList([NotNull] MParser.InitDeclaratorListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.initDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitDeclarator([NotNull] MParser.InitDeclaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeSpecifier([NotNull] MParser.TypeSpecifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarator([NotNull] MParser.DeclaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.directDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirectDeclarator([NotNull] MParser.DirectDeclaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.nestedParenthesesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNestedParenthesesBlock([NotNull] MParser.NestedParenthesesBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.pointer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointer([NotNull] MParser.PointerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.parameterTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterTypeList([NotNull] MParser.ParameterTypeListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] MParser.ParameterListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.parameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterDeclaration([NotNull] MParser.ParameterDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] MParser.IdentifierListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.parameterCallList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterCallList([NotNull] MParser.ParameterCallListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.abstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbstractDeclarator([NotNull] MParser.AbstractDeclaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.directAbstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirectAbstractDeclarator([NotNull] MParser.DirectAbstractDeclaratorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.typedefName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedefName([NotNull] MParser.TypedefNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] MParser.InitializerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializerList([NotNull] MParser.InitializerListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.designation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignation([NotNull] MParser.DesignationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.designatorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignatorList([NotNull] MParser.DesignatorListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignator([NotNull] MParser.DesignatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallStatement([NotNull] MParser.CallStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabeledStatement([NotNull] MParser.LabeledStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundStatement([NotNull] MParser.CompoundStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.blockItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockItemList([NotNull] MParser.BlockItemListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.blockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockItem([NotNull] MParser.BlockItemContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MParser.ExpressionStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionStatement([NotNull] MParser.SelectionStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationStatement([NotNull] MParser.IterationStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondition([NotNull] MParser.ForConditionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.forDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForDeclaration([NotNull] MParser.ForDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.forExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForExpression([NotNull] MParser.ForExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpStatement([NotNull] MParser.JumpStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] MParser.CompilationUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTranslationUnit([NotNull] MParser.TranslationUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.externalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalDeclaration([NotNull] MParser.ExternalDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] MParser.FunctionDefinitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.declarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationList([NotNull] MParser.DeclarationListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.inlineDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInlineDeclarationList([NotNull] MParser.InlineDeclarationListContext context);
}
} // namespace M

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Repos\MCPC\M\M\Grammar\M.g4 by ANTLR 4.6.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace M {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.calcExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalcExpression([NotNull] MParser.CalcExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.calcExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalcExpression([NotNull] MParser.CalcExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.calcOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalcOperator([NotNull] MParser.CalcOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.calcOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalcOperator([NotNull] MParser.CalcOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.unaryCalcOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryCalcOperator([NotNull] MParser.UnaryCalcOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.unaryCalcOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryCalcOperator([NotNull] MParser.UnaryCalcOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerList([NotNull] MParser.InitializerListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerList([NotNull] MParser.InitializerListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] MParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] MParser.AssignmentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.topLevelAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelAssignmentExpression([NotNull] MParser.TopLevelAssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.topLevelAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelAssignmentExpression([NotNull] MParser.TopLevelAssignmentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] MParser.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] MParser.TypeSpecifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.nestedParenthesesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNestedParenthesesBlock([NotNull] MParser.NestedParenthesesBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.nestedParenthesesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNestedParenthesesBlock([NotNull] MParser.NestedParenthesesBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDeclarationList([NotNull] MParser.ParameterDeclarationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDeclarationList([NotNull] MParser.ParameterDeclarationListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDeclaration([NotNull] MParser.ParameterDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDeclaration([NotNull] MParser.ParameterDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.paramterPassList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamterPassList([NotNull] MParser.ParamterPassListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.paramterPassList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamterPassList([NotNull] MParser.ParamterPassListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterCallList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterCallList([NotNull] MParser.ParameterCallListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterCallList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterCallList([NotNull] MParser.ParameterCallListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.shiftStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftStatement([NotNull] MParser.ShiftStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.shiftStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftStatement([NotNull] MParser.ShiftStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStatement([NotNull] MParser.AssignmentStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStatement([NotNull] MParser.AssignmentStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallStatement([NotNull] MParser.CallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallStatement([NotNull] MParser.CallStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStatement([NotNull] MParser.LabeledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStatement([NotNull] MParser.LabeledStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] MParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] MParser.CompoundStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] MParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] MParser.StatementListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionStatement([NotNull] MParser.SelectionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionStatement([NotNull] MParser.SelectionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationStatement([NotNull] MParser.IterationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationStatement([NotNull] MParser.IterationStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCondition([NotNull] MParser.ForConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCondition([NotNull] MParser.ForConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpStatement([NotNull] MParser.JumpStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpStatement([NotNull] MParser.JumpStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] MParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] MParser.CompilationUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslationUnit([NotNull] MParser.TranslationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslationUnit([NotNull] MParser.TranslationUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.topLevelDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelDeclaration([NotNull] MParser.TopLevelDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.topLevelDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelDeclaration([NotNull] MParser.TopLevelDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefinition([NotNull] MParser.FunctionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefinition([NotNull] MParser.FunctionDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.asmStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsmStatement([NotNull] MParser.AsmStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.asmStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsmStatement([NotNull] MParser.AsmStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.preprocessorDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessorDirective([NotNull] MParser.PreprocessorDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.preprocessorDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessorDirective([NotNull] MParser.PreprocessorDirectiveContext context);
}
} // namespace M

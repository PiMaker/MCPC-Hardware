//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\stefa\Desktop\Repos\MCPC\M\M\Grammar\M.g4 by ANTLR 4.6.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace M {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpression([NotNull] MParser.PrimaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpression([NotNull] MParser.PrimaryExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.argumentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentExpressionList([NotNull] MParser.ArgumentExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.argumentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentExpressionList([NotNull] MParser.ArgumentExpressionListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] MParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] MParser.UnaryExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryOperator([NotNull] MParser.UnaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryOperator([NotNull] MParser.UnaryOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] MParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.castExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] MParser.CastExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] MParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] MParser.MultiplicativeExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] MParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] MParser.AdditiveExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpression([NotNull] MParser.ShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpression([NotNull] MParser.ShiftExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] MParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] MParser.RelationalExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] MParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] MParser.EqualityExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] MParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] MParser.AndExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveOrExpression([NotNull] MParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveOrExpression([NotNull] MParser.ExclusiveOrExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveOrExpression([NotNull] MParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveOrExpression([NotNull] MParser.InclusiveOrExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] MParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] MParser.LogicalAndExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] MParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] MParser.LogicalOrExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalExpression([NotNull] MParser.ConditionalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalExpression([NotNull] MParser.ConditionalExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueExpression([NotNull] MParser.ValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueExpression([NotNull] MParser.ValueExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] MParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] MParser.AssignmentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] MParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] MParser.AssignmentOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] MParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] MParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] MParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] MParser.ConstantExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] MParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] MParser.DeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.inlineDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineDeclaration([NotNull] MParser.InlineDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.inlineDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineDeclaration([NotNull] MParser.InlineDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declarationSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationSpecifiers([NotNull] MParser.DeclarationSpecifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declarationSpecifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationSpecifiers([NotNull] MParser.DeclarationSpecifiersContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.initDeclaratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitDeclaratorList([NotNull] MParser.InitDeclaratorListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.initDeclaratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitDeclaratorList([NotNull] MParser.InitDeclaratorListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.initDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitDeclarator([NotNull] MParser.InitDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.initDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitDeclarator([NotNull] MParser.InitDeclaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] MParser.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] MParser.TypeSpecifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarator([NotNull] MParser.DeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarator([NotNull] MParser.DeclaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.directDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectDeclarator([NotNull] MParser.DirectDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.directDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectDeclarator([NotNull] MParser.DirectDeclaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.nestedParenthesesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNestedParenthesesBlock([NotNull] MParser.NestedParenthesesBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.nestedParenthesesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNestedParenthesesBlock([NotNull] MParser.NestedParenthesesBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.pointer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer([NotNull] MParser.PointerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.pointer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer([NotNull] MParser.PointerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterTypeList([NotNull] MParser.ParameterTypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterTypeList([NotNull] MParser.ParameterTypeListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] MParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] MParser.ParameterListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDeclaration([NotNull] MParser.ParameterDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDeclaration([NotNull] MParser.ParameterDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierList([NotNull] MParser.IdentifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierList([NotNull] MParser.IdentifierListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.parameterCallList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterCallList([NotNull] MParser.ParameterCallListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.parameterCallList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterCallList([NotNull] MParser.ParameterCallListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.abstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractDeclarator([NotNull] MParser.AbstractDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.abstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractDeclarator([NotNull] MParser.AbstractDeclaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.directAbstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectAbstractDeclarator([NotNull] MParser.DirectAbstractDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.directAbstractDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectAbstractDeclarator([NotNull] MParser.DirectAbstractDeclaratorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.typedefName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedefName([NotNull] MParser.TypedefNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.typedefName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedefName([NotNull] MParser.TypedefNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer([NotNull] MParser.InitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer([NotNull] MParser.InitializerContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerList([NotNull] MParser.InitializerListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerList([NotNull] MParser.InitializerListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.designation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignation([NotNull] MParser.DesignationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.designation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignation([NotNull] MParser.DesignationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.designatorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignatorList([NotNull] MParser.DesignatorListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.designatorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignatorList([NotNull] MParser.DesignatorListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] MParser.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] MParser.DesignatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallStatement([NotNull] MParser.CallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallStatement([NotNull] MParser.CallStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStatement([NotNull] MParser.LabeledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.labeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStatement([NotNull] MParser.LabeledStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] MParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] MParser.CompoundStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.blockItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockItemList([NotNull] MParser.BlockItemListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.blockItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockItemList([NotNull] MParser.BlockItemListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.blockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockItem([NotNull] MParser.BlockItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.blockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockItem([NotNull] MParser.BlockItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] MParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] MParser.ExpressionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionStatement([NotNull] MParser.SelectionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionStatement([NotNull] MParser.SelectionStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationStatement([NotNull] MParser.IterationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationStatement([NotNull] MParser.IterationStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCondition([NotNull] MParser.ForConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCondition([NotNull] MParser.ForConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.forDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForDeclaration([NotNull] MParser.ForDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.forDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForDeclaration([NotNull] MParser.ForDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.forExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForExpression([NotNull] MParser.ForExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.forExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForExpression([NotNull] MParser.ForExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpStatement([NotNull] MParser.JumpStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpStatement([NotNull] MParser.JumpStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] MParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] MParser.CompilationUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslationUnit([NotNull] MParser.TranslationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.translationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslationUnit([NotNull] MParser.TranslationUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.externalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternalDeclaration([NotNull] MParser.ExternalDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.externalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternalDeclaration([NotNull] MParser.ExternalDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefinition([NotNull] MParser.FunctionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefinition([NotNull] MParser.FunctionDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.declarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationList([NotNull] MParser.DeclarationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.declarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationList([NotNull] MParser.DeclarationListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MParser.inlineDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineDeclarationList([NotNull] MParser.InlineDeclarationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MParser.inlineDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineDeclarationList([NotNull] MParser.InlineDeclarationListContext context);
}
} // namespace M
